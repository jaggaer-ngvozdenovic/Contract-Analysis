{"remainingRequest":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nikola/CODES/cdQA-annotator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nikola/CODES/cdQA-annotator/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeahead.vue?vue&type=template&id=9a21a6f4&scoped=true&","dependencies":[{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeahead.vue","mtime":1538362888000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { class: _vm.sizeClasses }, [\n        _vm.$slots.prepend || _vm.prepend\n          ? _c(\n              \"div\",\n              { ref: \"prependDiv\", staticClass: \"input-group-prepend\" },\n              [\n                _vm._t(\"prepend\", [\n                  _c(\"span\", { staticClass: \"input-group-text\" }, [\n                    _vm._v(_vm._s(_vm.prepend))\n                  ])\n                ])\n              ],\n              2\n            )\n          : _vm._e(),\n        _c(\"input\", {\n          ref: \"input\",\n          class: \"form-control \" + _vm.inputClass,\n          attrs: {\n            type: \"search\",\n            placeholder: _vm.placeholder,\n            \"aria-label\": _vm.placeholder,\n            autocomplete: \"off\"\n          },\n          domProps: { value: _vm.inputValue },\n          on: {\n            focus: function($event) {\n              _vm.isFocused = true\n            },\n            blur: _vm.handleBlur,\n            input: function($event) {\n              return _vm.handleInput($event.target.value)\n            }\n          }\n        }),\n        _vm.$slots.append || _vm.append\n          ? _c(\n              \"div\",\n              { staticClass: \"input-group-append\" },\n              [\n                _vm._t(\"append\", [\n                  _c(\"span\", { staticClass: \"input-group-text\" }, [\n                    _vm._v(_vm._s(_vm.append))\n                  ])\n                ])\n              ],\n              2\n            )\n          : _vm._e()\n      ]),\n      _c(\"vue-bootstrap-typeahead-list\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.isFocused && _vm.data.length > 0,\n            expression: \"isFocused && data.length > 0\"\n          }\n        ],\n        ref: \"list\",\n        staticClass: \"vbt-autcomplete-list\",\n        attrs: {\n          query: _vm.inputValue,\n          data: _vm.formattedData,\n          \"background-variant\": _vm.backgroundVariant,\n          \"text-variant\": _vm.textVariant,\n          maxMatches: _vm.maxMatches,\n          minMatchingChars: _vm.minMatchingChars\n        },\n        on: { hit: _vm.handleHit },\n        scopedSlots: _vm._u(\n          [\n            _vm._l(_vm.$scopedSlots, function(slot, slotName) {\n              return {\n                key: slotName,\n                fn: function(ref) {\n                  var data = ref.data\n                  var htmlText = ref.htmlText\n                  return [\n                    _vm._t(slotName, null, null, {\n                      data: data,\n                      htmlText: htmlText\n                    })\n                  ]\n                }\n              }\n            })\n          ],\n          null,\n          true\n        )\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}