{"remainingRequest":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nikola/CODES/cdQA-annotator/src/components/HomePage.vue?vue&type=style&index=0&id=df02a584&scoped=true&lang=css&","dependencies":[{"path":"/home/nikola/CODES/cdQA-annotator/src/components/HomePage.vue","mtime":1621934065708},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nikola/CODES/cdQA-annotator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.uploadBar {\n  max-width: 300px;\n}\n",{"version":3,"sources":["HomePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA","file":"HomePage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"HomePage container mt-3 mb-3\">\n    <div v-if=\"fileUploaded\">\n      <AnnotationsPage v-bind:json=\"json\"/>\n    </div>\n    <div v-else>\n      <h1>cdQA-annotator</h1>\n      <hr>\n      <p>\n        cdQA-annotator a web-based annotator for closed-domain question answering datasets created for the\n        <a\n          href=\"https://github.com/cdqa-suite\"\n        >cdQA-suite</a> project.\n      </p>\n      <p>\n        To get started, upload a\n        <a href=\"https://rajpurkar.github.io/SQuAD-explorer/\">SQuAD v1.1</a>-like JSON file\n        where each document in the corpus has been pre-cut into paragraphs.\n      </p>\n      <p>\n        <strong>Example:</strong>\n      </p>\n      <json-viewer :value=\"jsonData\" :expand-depth=\"10\" copyable></json-viewer>\n      <br>\n      <div class=\"uploadBar\">\n        <b-form-file\n          v-model=\"file\"\n          :state=\"Boolean(file)\"\n          placeholder=\"Upload a JSON file...\"\n          accept=\".json\"\n        ></b-form-file>\n      </div>\n      <br>\n      <b-button :size=\"''\" :variant=\"'primary'\" v-on:click=\"readFile()\">Upload</b-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AnnotationsPage from \"./AnnotationsPage.vue\";\n\nexport default {\n  name: \"HomePage\",\n  data: function() {\n    return {\n      jsonData: {\n        data: [\n          {\n            title: \"Question answering\",\n            paragraphs: [\n              {\n                context:\n                  \"Question answering (QA) is a computer science discipline within the fields of information retrieval and natural language processing (NLP), which is concerned with building systems that automatically answer questions posed by humans in a natural language.\",\n                qas: []\n              },\n              {\n                context:\n                  \"A QA implementation, usually a computer program, may construct its answers by querying a structured database of knowledge or information, usually a knowledge base. More commonly, QA systems can pull answers from an unstructured collection of natural language documents.\",\n                qas: []\n              }\n            ]\n          },\n          {\n            title: \"Natural language processing\",\n            paragraphs: \"[...]\"\n          }\n        ]\n      },\n      fileUploaded: false,\n      file: null,\n      json: null\n    };\n  },\n  methods: {\n    readFile: function() {\n      var reader = new FileReader();\n      reader.onload = function(event) {\n        this.json = JSON.parse(event.target.result);\n        this.fileUploaded = true;\n      }.bind(this);\n      reader.readAsText(this.file);\n    }\n  },\n  components: {\n    AnnotationsPage\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.uploadBar {\n  max-width: 300px;\n}\n</style>\n"]}]}